##############################################################################
#
# ALPS/looper: multi-cluster quantum Monte Carlo algorithms for spin systems
# 
# Copyright (C) 1997-2003 by Synge Todo <wistaria@comp-phys.org>
# 
# This software is published under the ALPS Application License; you can use,
# redistribute and/or modify this software under the terms of the license,
# either version 1 or (at your option) any later version.
# 
# You should have received a copy of the ALPS Application License along with
# the ALPS Library; see the file License.txt. If not, the license is also
# available from http://alps.comp-phys.org/.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT 
# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, 
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
# DEALINGS IN THE SOFTWARE.
#
##############################################################################

# $Id: Makefile.in 554 2003-11-12 02:36:24Z wistaria $
# top-level Makefile

srcdir = @srcdir@
top_srcdir = @top_srcdir@
builddir = @builddir@l
top_builddir = ./@top_builddir@

include @INCLUDE_MK@

version = @PACKAGE_VERSION@
distdir = @PACKAGE_NAME@-@PACKAGE_VERSION@

cppflags = $(CPPFLAGS) -I$(top_srcdir)
cppflags_mpi = $(CPPFLAGS_MPI) -I$(top_srcdir)
cxxflags = $(CXXFLAGS)
ldflags = $(LDFLAGS)
ldflags_mpi = $(LDFLAGS_MPI)
libs_program = -lalps -lcomm-sgl $(HDF5_LIBS) $(XML_LIBS) $(BASE_LIBS)
libs_program_mpi = -lalps -lcomm-mpi $(HDF5_LIBS) $(XML_LIBS) $(MPI_LIBS) $(BASE_LIBS)

LOCAL_CONFIG = lattices.xml models.xml percolation-params qmc-params
PROGRAM_MPI =
PROGRAM =
EXAMPLE_MPI = qmc_mpi percolation_mpi
EXAMPLE = copyright qmc qmc_cmd percolation percolation_cmd @EXAMPLE_MPI@

SCRIPTS = configure
ERASE =

default programs all : $(EXAMPLE)

# rules for tests

all : all-test
all-test :
	@$(MAKE) -C test all
tests : tests-test
tests-test :
	@$(MAKE) -C test tests
depend : depend-test
depend-test :
	@$(MAKE) -C test depend
clean : clean-test
clean-test :
	@$(MAKE) -C test clean
distclean : distclean-test
distclean-test :
	@$(MAKE) -C test distclean

bootstrap :
	autoconf --force
	rm -rf autom4te*.cache

release dist check snapshot : Makefile
	@root=`cat $(top_srcdir)/CVS/Root`; \
	repository=`cat $(top_srcdir)/CVS/Repository`; \
	tag=`echo release_$(version) | sed 's/\./_/g'`; \
	if test "$@" = "check"; then tag='HEAD'; fi; \
	if test "$@" = "snapshot"; then tag='HEAD'; fi; \
	version=$(version); \
	if test "$@" = "snapshot"; then version=`date +%Y%m%d`; fi; \
	distdir=@PACKAGE_NAME@-$$version; \
	echo version = $$version; \
	echo tag = $$tag; \
	echo root = $$root; \
	echo repository = $$repository; \
	echo cvs -d $$root -Q export -r $$tag $$repository; \
	cvs -d $$root -Q export -r $$tag $$repository; \
	(cd $$repository && rm -rf $(ERASE)); \
	find $$repository -name .cvsignore | xargs rm -f; \
	find $$repository -type f | xargs chmod 644; \
	find $$repository -type d | xargs chmod 755; \
	(cd $$repository && chmod 755 $(SCRIPTS)); \
	mv -f $$repository $$distdir; \
	tar chof - $$distdir | gzip -c > $$distdir.tar.gz; \
	rm -rf $$distdir

# dependency for inputs

models.xml : $(srcdir)/models.xml.in
	$(top_builddir)config.status models.xml
lattices.xml : $(srcdir)/lattices.xml.in
	$(top_builddir)config.status lattices.xml

percolation-params : $(srcdir)/percolation-params.in
	./config.status percolation-params
percolatioin-params.in.xml : percolation-params
	$(bindir)/convert2xml percolation-params

qmc-params : $(srcdir)/qmc-params.in
	./config.status qmc-params
qmc-params.in.xml : qmc-params
	$(bindir)/convert2xml qmc-params

include $(RULES_MK)
include $(srcdir)/Makefile.dep
