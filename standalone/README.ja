このディレクトリには ALPS/looper (http://wistaria.comp-phys.org/alps-looper)
の path_integra.C からループアルゴリズム量子モンテカルロ法のカーネル部分
を抽出したコードが含まれている

  loop.C        プログラム本体 (シリアル版)
  loop_mpi.C    プログラム本体 (並列版)
  common.h      クラス定義
  obervable.h   統計平均のためのクラス (ALPS/alea の簡易版)
  options.h     コマンドライン引数の処理を行なうクラス
  paralel.h     並列クラスター結合を行なうクラス
  union_find.h  リンクリストを操作する関数群

  loop.op       loop を引数なしで実行した場合の出力結果 (確認用)
  loop_mpi.op-X loop_mpi を引数なしで実行した場合の出力結果 (確認用)
                X (= 1,2,3,4) はプロセス数

必要とするライブラリ

  Boost C++ Library (http://www.boost.org)
    version 1.34.1, 1.35.0 での動作を確認済
    boost/foreach.hpp, boost/random.hpp, boost/timer.hpp,
    boost/lexical_cast.hpp, boost/static_assert.hpp,
    boost/throw_exception.hpp を使用

コンパイル方法

  シリアル版
    c++ -I$(BOOST_SRCDIR) -O3 loop.C -o loop
  並列版
    mpic++ -I$(BOOST_SRCDIR) -O3 loop_mpi.C -o loop_mpi

動作確認

  シリアル版
    ./loop | diff loop.op -
  並列版
    mpirun -np 1 loop_mpi | diff loop_mpi.op-1 -
    mpirun -np 2 loop_mpi | diff loop_mpi.op-2 -
    mpirun -np 3 loop_mpi | diff loop_mpi.op-3 -
    mpirun -np 4 loop_mpi | diff loop_mpi.op-4 -

ベンチマーク例 (単位 MCS/sec)

  使用機材: SGI Altix 3700 Bx2 (東大物性研)
            (Itanium2 1.5GHz, Linux, Intel C/C++ Compiler 10.0)
  param 1: -l 128 -t 0.01
  param 2: -l 1024 -t 0.001 -n 1024

    CPU数	param 1		param 2
    1		412		3.30
    2		766		7.00
    4		1355		14.2
    8		2072		31.9
    16		2562		67.8
    32		2622		121
